{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML_projects\\\\React\\\\youtube\\\\src\\\\Components\\\\SidePar\\\\SidePar.jsx\",\n  _s = $RefreshSig$();\nimport classes from './SidePar.module.css';\nimport { Categories } from './Icons';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { SubscribeActions } from '../RTK/Slices/Subscribtion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SidePar(props) {\n  _s();\n  const state = useSelector(state => state.Subscibe);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.sidePar,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [Categories.MainCategory.map(category => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: props.selectedCategory === category.name ? {\n            backgroundColor: 'red'\n          } : null,\n          onClick: () => {\n            props.setSelectedCategory(category.name);\n          },\n          children: [category.icon, \" \", category.name]\n        }, category.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.title,\n        children: \"Subscribtions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: state.map(channel => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              style: props.selectedCategory === channel.name ? {\n                backgroundColor: 'red'\n              } : null,\n              onClick: () => {\n                props.setSelectedCategory(channel.name);\n              },\n              children: [channel.name, \"  \"]\n            }, channel.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => dispatch(SubscribeActions.REMOVE(channel)),\n              className: classes.exit,\n              children: \"x\"\n            }, channel.channelId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Created by Mohamed ELsheta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(SidePar, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = SidePar;\nexport default SidePar;\nvar _c;\n$RefreshReg$(_c, \"SidePar\");","map":{"version":3,"names":["classes","Categories","useSelector","useDispatch","SubscribeActions","jsxDEV","_jsxDEV","SidePar","props","_s","state","Subscibe","dispatch","className","sidePar","children","MainCategory","map","category","style","selectedCategory","name","backgroundColor","onClick","setSelectedCategory","icon","fileName","_jsxFileName","lineNumber","columnNumber","title","channel","REMOVE","exit","channelId","_c","$RefreshReg$"],"sources":["D:/HTML_projects/React/youtube/src/Components/SidePar/SidePar.jsx"],"sourcesContent":["import classes from './SidePar.module.css'\r\nimport {Categories} from './Icons'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { SubscribeActions } from '../RTK/Slices/Subscribtion'\r\nfunction SidePar (props) {\r\n    const state = useSelector(state => state.Subscibe)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className={classes.sidePar}>\r\n            <ul>\r\n                {Categories.MainCategory.map((category) => {\r\n                    return <li style={props.selectedCategory === category.name ? {backgroundColor: 'red'} : null} key={category.name} onClick={() => {props.setSelectedCategory(category.name)}}>\r\n                        {category.icon} {category.name}\r\n                        </li>\r\n                })}\r\n                <span></span><br></br>\r\n                <p className={classes.title}>Subscribtions</p>\r\n                <ul>\r\n                    {state.map((channel) => {\r\n                    return <div>\r\n                        <li style={props.selectedCategory === channel.name ? \r\n                            {backgroundColor: 'red'} : null}\r\n                        key={channel.name}\r\n                        onClick={() => {props.setSelectedCategory(channel.name)}}>{channel.name}  </li>                        \r\n                        <span key={channel.channelId} onClick={() => dispatch(SubscribeActions.REMOVE(channel))} className={classes.exit}>x</span>\r\n                    </div>\r\n                    \r\n                })}\r\n                </ul>   \r\n                <h6>Created by Mohamed ELsheta</h6>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default SidePar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}