{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML_projects\\\\React\\\\youtube\\\\src\\\\Components\\\\Vidios\\\\Vidios.jsx\";\nimport React from 'react';\nimport { ChannelCard, VidioCard } from '../index';\nimport classes from './Videos.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vidios = _ref => {\n  let {\n    Vidios\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.videos,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.cards,\n      children: Vidios.map((item, inx) => {\n        if (item.id.videoId) {\n          return /*#__PURE__*/_jsxDEV(VidioCard, {\n            vidio: item\n          }, inx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 32\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(ChannelCard, {\n            vidio: item\n          }, inx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 32\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Vidios;\nexport default Vidios;\nvar _c;\n$RefreshReg$(_c, \"Vidios\");","map":{"version":3,"names":["React","ChannelCard","VidioCard","classes","jsxDEV","_jsxDEV","Vidios","_ref","className","videos","children","cards","map","item","inx","id","videoId","vidio","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/HTML_projects/React/youtube/src/Components/Vidios/Vidios.jsx"],"sourcesContent":["import React from 'react'\r\nimport { ChannelCard, VidioCard} from '../index'\r\nimport classes from './Videos.module.css'\r\n\r\nconst Vidios = ({Vidios}) => {\r\n\r\n    return (\r\n        <div className={classes.videos}>\r\n            <div className={classes.cards}>\r\n                {Vidios.map((item , inx) => {\r\n                    if (item.id.videoId) {\r\n                        return <VidioCard vidio={item} key={inx} />\r\n                    }else {\r\n                        return <ChannelCard vidio={item} key={inx} />\r\n                    }\r\n                })}        \r\n            </div>                \r\n            </div>\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Vidios"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAO,UAAU;AAChD,OAAOC,OAAO,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGC,IAAA,IAAc;EAAA,IAAb;IAACD;EAAM,CAAC,GAAAC,IAAA;EAEpB,oBACIF,OAAA;IAAKG,SAAS,EAAEL,OAAO,CAACM,MAAO;IAAAC,QAAA,eAC3BL,OAAA;MAAKG,SAAS,EAAEL,OAAO,CAACQ,KAAM;MAAAD,QAAA,EACzBJ,MAAM,CAACM,GAAG,CAAC,CAACC,IAAI,EAAGC,GAAG,KAAK;QACxB,IAAID,IAAI,CAACE,EAAE,CAACC,OAAO,EAAE;UACjB,oBAAOX,OAAA,CAACH,SAAS;YAACe,KAAK,EAAEJ;UAAK,GAAMC,GAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QAC/C,CAAC,MAAK;UACF,oBAAOhB,OAAA,CAACJ,WAAW;YAACgB,KAAK,EAAEJ;UAAK,GAAMC,GAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QACjD;MACJ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAKlB,CAAC;AAAAC,EAAA,GAlBKhB,MAAM;AAoBZ,eAAeA,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}