{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst Subscribtion = createSlice({\n  initialState: [],\n  name: 'subscibe',\n  reducers: {\n    ADD: (state, action) => {\n      const newItems = [...state, action.payload];\n      if (localStorage.getItem('subItems')) {\n        console.log(JSON.parse(localStorage.getItem('subItems')));\n      }\n      localStorage.setItem('subItems', JSON.stringify(newItems));\n      return newItems;\n    },\n    REMOVE: (state, action) => {\n      // const itemIndex = state.findIndex((item) => item.name === action.payload.name )\n      const newItems = state.filter(item => item.name !== action.payload.name);\n      localStorage.setItem('subItems', JSON.stringify(newItems));\n      return newItems;\n    },\n    SET: (state, action) => {\n      return [...state, ...action.payload];\n    }\n  }\n});\nexport default Subscribtion.reducer;\nexport const SubscribeActions = Subscribtion.actions;","map":{"version":3,"names":["createSlice","Subscribtion","initialState","name","reducers","ADD","state","action","newItems","payload","localStorage","getItem","console","log","JSON","parse","setItem","stringify","REMOVE","filter","item","SET","reducer","SubscribeActions","actions"],"sources":["D:/HTML_projects/React/youtube/src/Components/RTK/Slices/Subscribtion.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst Subscribtion = createSlice({\r\n        initialState: [],\r\n        name: 'subscibe',\r\n        reducers: {\r\n            ADD: (state , action) => {\r\n                const newItems = [...state , action.payload]\r\n                if(localStorage.getItem('subItems')){\r\n                    console.log(JSON.parse(localStorage.getItem('subItems')))\r\n                }\r\n                localStorage.setItem('subItems' , JSON.stringify(newItems))\r\n                return newItems\r\n            },\r\n            REMOVE: (state , action) => {\r\n                // const itemIndex = state.findIndex((item) => item.name === action.payload.name )\r\n                const newItems = state.filter((item) => item.name !== action.payload.name)\r\n                localStorage.setItem('subItems' , JSON.stringify(newItems))\r\n                return newItems\r\n            },\r\n            SET: (state , action) => {\r\n                return [...state , ...action.payload]\r\n            }\r\n        }\r\n    })\r\n\r\nexport default Subscribtion.reducer\r\n\r\nexport const SubscribeActions =  Subscribtion.actions"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACzBE,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE;IACNC,GAAG,EAAEA,CAACC,KAAK,EAAGC,MAAM,KAAK;MACrB,MAAMC,QAAQ,GAAG,CAAC,GAAGF,KAAK,EAAGC,MAAM,CAACE,OAAO,CAAC;MAC5C,IAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAC;QAChCC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MAC7D;MACAD,YAAY,CAACM,OAAO,CAAC,UAAU,EAAGF,IAAI,CAACG,SAAS,CAACT,QAAQ,CAAC,CAAC;MAC3D,OAAOA,QAAQ;IACnB,CAAC;IACDU,MAAM,EAAEA,CAACZ,KAAK,EAAGC,MAAM,KAAK;MACxB;MACA,MAAMC,QAAQ,GAAGF,KAAK,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACjB,IAAI,KAAKI,MAAM,CAACE,OAAO,CAACN,IAAI,CAAC;MAC1EO,YAAY,CAACM,OAAO,CAAC,UAAU,EAAGF,IAAI,CAACG,SAAS,CAACT,QAAQ,CAAC,CAAC;MAC3D,OAAOA,QAAQ;IACnB,CAAC;IACDa,GAAG,EAAEA,CAACf,KAAK,EAAGC,MAAM,KAAK;MACrB,OAAO,CAAC,GAAGD,KAAK,EAAG,GAAGC,MAAM,CAACE,OAAO,CAAC;IACzC;EACJ;AACJ,CAAC,CAAC;AAEN,eAAeR,YAAY,CAACqB,OAAO;AAEnC,OAAO,MAAMC,gBAAgB,GAAItB,YAAY,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}